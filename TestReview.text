#테스트 코드를 작성 소감

글을 쓸 때, 글을 수시로 읽고 수정하는 것이 당연하다. 
하지만 코드를 짤 적에는 코드에서 오류가 날 때까지 그러지 않았다. 
생각해보니 코드를 마치 글 쓰는 것 처럼 편집하고 있기 때문인 것 같다. 
코드를 수십번 읽어도 도저히 뭐가 문제인지 알지 모를 때, 
그저세야 코드를 단위로 나누어 각 문장들을 점검하기 시작했다. 
코드를 확인하기 위해, 코드를 분리하고, 출력하고, 
때론 재정리하는 같은 행적들을 취해야 해기 때문인 것 같다. 
특히 시간이 촉박하게 느낄 때,
코드 테스트까지 작성하고 점검하는게 일을 두 배나 더 키우는 것 같지 느껴졌다. 
하지만 코드에 해당 되는 조건과 예외들이 늘어나면서, 
이를 하나씩 기억하고 확인하는 일이 점 점 더 꼬이기 시작하기 때문이다. 
모든 테스트들을 다 실행 했다고 해도, 
내가 각 케이스들을 오류 없이 실행했는지, 
놓친 또 다른 케이스가 없는지 항상 마음이 찝찝했다. 
테스트 코드는 모든 케이스들을 한 곳에 모아, 
코드 점검도 읽을 수 있게 한다. 즉, 
예외 처리를 코드에서 추론하는 것이 아니라, 
코드에서 오류가 날 수 있는 상황들을 서술하기 때문이다.

나는 테스트를 작성하기 전에 코드를 점검하는 것을 잡무로 여겨 왔던 것 같다. 
하지만 여러 상황들을 한 눈에 보일 수 있게 끔 정리하면서, 
코드를 점검하는 일이 그만큼 더 쉽고 편리 해줬다. 
코드를 점검하는 일이 더 이상 숨은 그림 찾기가 아닌, 
또 하나 나만의 코드 완성품이 된 것 같아 이 또한 작성하는데 보람도 두 배 이상인 것 같다.
